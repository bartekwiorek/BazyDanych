select * from ksiazka where cena > (select AVG(cena) from ksiazka);           -- dwa selekty
select k.imie_klienta, k.nazwisko_klienta, b.tytul, z.data_zamowienia from zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta inner JOIN ksiazka b on z.id_ksiazki = b.id_ksiazki;                                   --inner join
select k.imie_klienta, k.nazwisko_klienta, z.data_zamowienia from zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta inner JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki where z.data_zamowienia > '2023-09-08';     --po dacie
select k.imie_klienta, k.nazwisko_klienta, b.tytul from zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta inner JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki where nazwisko_klienta="Kowalski";                    --po nazwisku
select imie_klienta, nazwisko_klienta, tytul, data_zamowienia from klient, ksiazka, zamowienie where zamowienie.id_klienta = klient.id_klienta and zamowienie.id_ksiazki = ksiazka.id_ksiazki and nazwisko_klienta = "kowalski";  --drugi sposob                             --drugi sposob
select klient.imie_klienta, klient.nazwisko_klienta, round (SUM(ksiazka.cena),2) AS suma_zamowien from klient, ksiazka, zamowienie where zamowienie.id_klienta = klient.id_klienta and zamowienie.id_ksiazki = ksiazka.id_ksiazki GROUP by klient.id_klient       --suma cen zamowienia
select klient.imie_klienta, klient.nazwisko_klienta, count(ksiazka.cena) AS suma_zamowien from klient, ksiazka, zamowienie where zamowienie.id_klienta = klient.id_klienta and zamowienie.id_ksiazki = ksiazka.id_ksiazki GROUP by klient.id_klienta;        --policz ile zamowien
select ksiazka.tytul, count(zamowienie.id_zamowienia) AS liczba_zamowien from ksiazka, zamowienie where zamowienie.id_ksiazki = ksiazka.id_ksiazki GROUP by ksiazka.id_ksiazki;                                                                              --wysietlamy liczbe zamowien dla kazdje ksaizki
select concat(klient.imie_klienta," ", klient.nazwisko_klienta) as autor, COUNT(ksiazka.cena) as liczba_ksiazek from klient, ksiazka, zamowienie where zamowienie.id_klienta = klient.id_klienta and zamowienie.id_ksiazki = ksiazka.id_ksiazki GROUP BY klient.id_klienta ORDER BY liczba_ksiazek DESC;   --wysietlamy liczbe zamowien dla id klienta


SELECT k.imie_klienta, k.nazwisko_autora, b.tytul, z.data_zamowienia FROM zamowienie z INNER JOIN klient k ON z.id_klienta=k.id_klienta INNER JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki;                                          -- Wyświetla imię i nazwisko klienta, tytuł zamówionej książki oraz datę zamówienia, łącząc dane z trzech tabel.
SELECT k.imie_klienta, k.nazwisko_klienta, z.data_zamowienia FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta WHERE z.data_zamowienia > '2023-09-08';                                                             -- Wyświetla klientów, którzy złożyly zamówienie po określonej dacie.
SELECT k.imie_klienta, k.nazwisko_klienta, b.tytul, z.data_zamowienia FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta INNER JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki;                                       -- Wyświetla imię klienta, nazwisko klienta, tytuł zamówionej książki oraz datę zamówienia.
SELECT k.imie_klienta, k.nazwisko_klienta, b.tytul, z.data_zamowienia FROM zamowienie z, klient k, ksiazka b WHERE z.id_klienta = k.id_klienta AND z.id_ksiazki = b.id_ksiazki;                                                       -- Wyświetla imię klienta, nazwisko klienta, tytuł zamówionej książki oraz datę zamówienia, tak samo jak wyżej, tylko prostszym sposobem.
SELECT b.tytul, k.imie_klienta, k.nazwisko_klienta FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta INNER JOIN ksiazka b on z.id_ksiazki = b.id_ksiazki WHERE k.nazwisko_klienta = 'kowalski';                    -- Wyświetla tytuły książek zamówionych przez klientów o nazwisku Kowalski.
SELECT b.tytul, k.imie_klienta, k.nazwisko_klienta FROM zamowienie z, klient k, ksiazka b WHERE z.id_klienta = k.id_klienta AND z.id_ksiazki = b.id_ksiazki AND k.nazwisko_klienta = 'kowalski';                                      -- Wyświetla tytuły książek zamówionych przez klientów o nazwisku Kowalski, ale łatwiejszym sposobem.
SELECT k.imie_klienta, k.nazwisko_klienta, ROUND(SUM(b.cena),2) AS laczna_wartosc FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta INNER JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki GROUP BY k.id_klienta;     -- Wyświetla imiona i nazwiska klientów oraz sumaryczną wartość ich zamówień.
SELECT k.imie_klienta, k.nazwisko_klienta, COUNT(z.id_ksiazki) AS laczna_ilosc FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta INNER JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki GROUP BY k.id_klienta;        -- Wyświetla imiona i nazwiska klientów oraz liczbę książek, które zamówili.
SELECT b.tytul, COUNT(z.id_zamowienia) AS liczba_zamowien FROM zamowienie z INNER JOIN klient k ON z.id_klienta = k.id_klienta INNER JOIN ksiazka b ON z.id_ksiazki = b.id_ksiazki GROUP BY z.id_zamowienia;                          -- Wyświetla liczbę zamówień dla każdej książki, posortowaną od najczęściej zamawianych.
SELECT Concat(k.imie,' ', k.nazwisko) AS klient, COUNT(z.id_zamowienia) AS liczba_zamowien FROM zamowienia z  JOIN klient k ON z.id_klienta = k.id_klienta  GROUP BY z.id_klientaORDER BY `liczba_zamowien` DESC;                                                                                                                                                                                                                                                                                  




















                                                TEMAT: jezyk definowania zapytań
Instrukcja SELECT pozwala na okreslenie tego jakie dane zostana wyswietlone z danej tabeli. podstawowa forma instrukcji jest nastepujaca:   select * form tabela, gdzie * wyswietla wszystkie kolumny danej tabelii
Klauzura DISTI pozwala na wyswietlenmie nie powtarzajacych sie danych. 
Polecnie SELECT pozwala na obliczanie wyrazen w instrukcjach: SELECT tytul, 0.8*cena as 'Cena Promocyjna' from ksiazka;
Aby zaokraglisc wartosci w tabeli trzeba uzyc polecnie round();
Aby polaczy kilka pol w bazie sql uzywamy polecenia CONCAT(); funkcja ta laczy lancuchy znakow CONCAT('imieautora','nazwiskoautora') as 'imie i nazwisko autora' from kmsaizka;

  
                                                łączenie tabel w mysql
Połaczenia miedzy tabelami sa najwazniejszym mechanizmen relacyjnych baz danych. To dzieki nim mozemy wybierac pasujace do siebie dane z wielu tabel. 
Połączenia w bazach danych sa realizowane miedzy kluczem podstawowymn w jednej tabeli i kluczem w drugiej tabeli. W jezyku mysql polaczenie miedzy tabelamijest definiowane w sekcji zapytania.
Połaczenie miedzy tabelami definiuje slowo kluczowe inner join. Aby prawidlowo utworzyc zapytanie nalezy zdefiniowac polaczenia miedzy tabelami bazy danych.
Połączen miezdy tabelami mozna uzywac wielokrotnie jednak wplywa to na szybkosc dzialania zapytania. Kolejnym rodzajem poolaczenia miedzy tabelami jest polaczenie zewnetrzne OUTER JOIN.
Przy takim polaczeniu wynikiem zapytania sa wszystkie wiersze w jednej tabeli i pasujace do niej wiersze z drugiej tabeli. Polaczenia zewnetrze definiuje sie za pomoca polecen LEFT zwraca wszystkie 
wiersze z pierwszej tabeli i pasujace wyniki z drugiej tabeli.
Polecenie right zwraca polecenie z lewej tabeli i pasujace z prawej tabeli.
Polecenie FULL zwraca wszystkie pasujace zapytania z tabel.

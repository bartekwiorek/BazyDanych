Nazwa	Opis
TINYINT	1-bajtowe pole, przechowujące wartości całkowite bez znaku z przedziału od 0 do 255 lub ze znakiem z przedziału od -127 do 127
SMALLINT	2-bajtowa wartość całkowita. Zakres wartości bez znaku od 0 do 65 535 lub ze znakiem od -32 768 do 32 768
MEDIUMINT	3-bajtowa wartość całkowita. Zakres wartości od 0 do 16 777 215 lub ze znakiem od -8 388 608 do 8 388 608
INT	4-bajtowa wartość całkowita. Zakres wartości ze znakiem od -2 147 483 648 do 2 147 483 647 lub bez znaku od 0 do 4 294 967 295
BIGINT	8-bajtowa wartość całkowita. Typ BIGINT jest używany podczas przeprowadzania obliczeń. Stosując pola tego typu we własnej bazie danych należy uważać, aby ich wartości nie były zbyt duże, ponieważ użyte w obliczeniach mogą doprowadzić do błędu przepełnienia
FLOAT	4-bajtowa liczba zmiennoprzecinkowa z zakresu od -1.402823466E+38 do -1.175494351E-38, 0 i 1.175494351E-38 do 3.402823466E+38
DOUBLE	8-bajtowa liczba zmiennoprzecinkowa przechowująca wartości z zakresu od -1.7976931348623157E+308 do -2.2250738585072014E-308, 0, i 2.2250738585072014E-308 do 1.7976931348623157E+308
DECIMAL	Pole zmiennoprzecinkowe o takiej samej pojemności jak DOUBLE. Liczba, zamiast zostać zredukowana do postaci szesnastkowej, pamiętana jest w formacie znakowym
DATE	Data (bez czasu), wyświetlana w formacie RRRR-MM-DD. Akceptuje daty w różnych formatach z zakresu od 1000-01-01 do 9999-12-31
DATETIME	Pole daty z czasem dnia wyświetlane według formatu RRRR-MM-DD GG:MM:SS. Może przechowywać wartości z zakresu od 1000-01-01 00:00:00 do 9999-12-31 23:59:59
TIMESTAMP	Data i czas liczony od początku epoki systemu UNIX, 1970-01-01 00:00:00, do momentu kiedy 32-bitowe pole przechowujące liczbę sekund, jaka upłynęła od tej daty ulegnie przepełnieniu w roku 2037. Jeśli polu temu nie została nadana wartość przez wyrażenie INSERT lub UPDATE, domyślnie otrzyma ono wartość daty bieżącej
TIME	Czas mieszczący się w przedziale od -838:59:59 do 838:59:59
CHAR	Pole znakowe o stałej długości z zakresu od 1 do 255 bajtów. Po wstawieniu wartości puste miejsca pola CHAR są uzupełniane z prawej strony spacjami
VARCHAR	Pole znakowe o zmiennej długości z zakresu od 1 do 65 535 bajtów (w wersji poniżej 5.0.3. od 1 do 255 bajtów). Zajmowany jest jedynie taki obszar pamięci, jakiego wymaga wartość wstawiona w to pole
MEDIUMTEXT	Kolumna binarna lub tekstowa o rozmiarze nie przekraczającym 16 777 215 bajtów
LONGTEXT	Kolumna binarna lub tekstowa o rozmiarze nie przekraczającym 4 294 967 295 bajtów
TEXT	Kolumna binarna lub tekstowa o rozmiarze nie przekraczającym 65 535 bajtów\
TINYTEXT	Kolumna binarna lub tekstowa o rozmiarze nie przekraczającym 255 bajtów

INSERT INTO klient(id_klient, imie, nazwisko, miejscowosc, nr_telefonu) VALUES ('',"Jan","Marcinskowski","Kalisz","1234567");

Jezyk SQL (Structured Query Language) jest uniwersalnym językiem zapytań stosowanym w systemach relacyjnych baz danych w celu komunikowania się z bazą. Służy do manipulowania danymi umieszczonymi w relacyjnych bazach danych. Dzieki niemu praca na roznych systemach baz danych sprowadza sie do wydawania tych samych lub podobnych komend tak zwanych zapytań SQL.
Język w SQL zaimplementowano w większości relacyjnych systmów baz danych takich jak DB2, Oracle, InterBase, MySQL, dBase i Paradox. Składnie jezyka SQL mozemy podzielic na 4 czesci:
  -Język Definiowania Struktur Danych (DDL Data Definition) jest wykorzystywany do wszystkich operacji na tabelach takich jak tworzenie, modyfiacja i usuwanie.
  -Jezyk do wybierania i maniupulowania danymi (DML Data Manipulation Language) sluzy do manpulowania danymi umieszczonymi w tabelach, pozwala na wstawienie oraz na prezentacje modyfikowania oraz usuwania.
  -Jezyk do zapewnienia bezpieczenstwa dostepu do danych (DCL Data Control Language) jest uzywany glownie przez administratorów systemow baz banych do nadawania odpowiednich uprawnien do korzystania z bazy danych.
  -Jezyk definowania zapytan (DQL Data Query Language) używany jest do formulowania zapytań do baz danych. Do zakresu tego jezyka wchodzi polecenie SELECT
Instrukcje SQL skladaja sie z wyrazen oraz klauzuli. wyrazenie jest poleceniem (instrukcja), ktore ustala co nalezy zrobic. Klauzula sluzy do ustalenia ograniczen dla danego polecenia i jest zapisywana w formie warunków.
\

operatory dziela sie na:
-arytmetyczne: suma, roznica, iloczyn, iloraz, modulo
-znakowe: konkatenacja, procent, symbolujacy jeden znak ("_")
-logiczne: operator "end", alternatywa opertor "or", negacja "not"
-rownania: mniejszy, wiekszy, mniejszy rowny, wiekszy rowny, rowny
-operatory specjalne: between...end, like, in,


04/04/2024
Temat jezyk definiowania struktur danych - DDL

Jezyk DDL slozy do tworzenia modyfikacji i usuwania bazy danych oraz jej tabel

Funkcja DDL polecenia:
-create nazwa obiektu - tworzenie obiektu (bazy lub tabeli)
-alter nazwa obiektu - modyfikacja obiektu
-drop nazwa obiektu - usuwanie obiektu 

Usuniecie bazy danych jest mozliwe tylko wtedy jesli dysponuje sie odpowiednimi uprawnieniami do bazy i nikt nie jest z nia polaczony w danym momencie (wazne!)  Podczas tworzenia tabel nalezy pameitac o nastepujacych zasadach:

-kazda tabela powinna miec unikatowa nazwe
-kazda kolumna w tabeli powinna miec unikatowa nazwe
-kazda kolumna musi miec unikatowa nazwe
-nalezy pamietac ze utworzone tabele nie sa wsypelnione danymi (oczywiste)

Modyfikowanie tabel 

podczas modyfikowania utworzonej tabeli nalezy zastosowac instrukcje ALTER umozliwia ona miedzy innymi dodawanie nowej kolumny, skasowanie juz utowrzonej kolumny, przeniesienie kolumny, badz dodanie lub usuniecie danego ograniczenia

Atrybuty pol w tabelach

w tabelach tworzonych w bazach danych mozna narzucic pewne ograniczenia okreslajace dokladnie strukture danych jakie moga zostac zapisane w danej kolumnie ograniczenia dotyczace kolumn moga byc definiowane w trakcie robienia tabeli lub jej modyfikowanie 

atrybut not null oznacza ze w danej kolumnie nie moga sie znajdowac wartosci puste aby zabronic wstawiania pusty wartosci null podczas tworzenia tabeli nalezy po nazwie kolumny wpisac not null

mozna rowniez jawnie zezwolic na wprowadzenie do kolumny wartosci null przez wpisanie w swojej po jej nazwie slowa null

Do wyświetlania danych z tabeli sluzy polecenie select
Select field_name1 from tabela [where condtition] [group by field name] [having condition] [order by field name] [offset m][limit n]

klucz podstawowy primary key to kolumna ktore w sposob jednoznaczny definuja wiersz w tabeli, kolumna z tym atrybutem jest unikatowa i automatycznie indeksowana. klucz podstawowy w tabelach odgrywa bardzo wazna role poniewaz sluzy do jednoznacznego identyfikowania rekordow danej tabeli. jak latwo zauwazyc dane w tych kolumnach nie moga sie pwotarzac. aby w utworzonej wczesniej tabeli ustawic klucz podstawowy nalezy uzyc polecenia:
  alter table table add constraint primary key nazwa_kolumny
podczas wstawiania nowych danych do tabeli, odbrze jest nie podawac wartosci do klucza poniewaz uzytkjownik bazy moze nie wiedziec, jakie id ma ostatni dodany rekord. najlepiej aby wartosci tej kolumny byly automatycznie uzupelniane poprzez autoinkrementacje, ktora uzyskuje sie przy pomocy auto_increment. dodanie tej wartosci dla kolumny jest mozliwe, tylko podczas jej tworzenia, nie ma mozliwosci aktualizowania utworzonej kolumny










